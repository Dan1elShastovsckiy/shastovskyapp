import 'package:flutter/material.dart';
import 'package:minimal/components/components.dart';
import 'package:minimal/pages/page_georgia_post.dart'; // <<< 1. –ò–ú–ü–û–†–¢ –ù–û–í–û–ô –°–¢–†–ê–ù–ò–¶–´
import 'package:minimal/pages/page_post.dart';
import 'package:minimal/pages/page_under_construction.dart';
import 'package:minimal/utils/max_width_extension.dart';
import 'package:responsive_framework/responsive_framework.dart';

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –ø–æ—Å—Ç–æ–≤
const String moroccoTitle =
    "–ú–ê–†–û–ö–ö–û: –ó–∞–±–ª—É–¥–∏—Ç—å—Å—è, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Å–µ–±—è –≤ —Å–µ—Ä–¥—Ü–µ –ø—É—Å—Ç–æ—Ç—ã";
const String moroccoDescription =
    "–ò—Å—Ç–æ—Ä–∏—è –æ —Ç–æ–º, –∫–∞–∫ —è –ø–æ—Ç–µ—Ä—è–ª—Å—è –≤ –ª–∞–±–∏—Ä–∏–Ω—Ç–µ —É–ª–∏—Ü –ú–∞—Ä–æ–∫–∫–æ. –ê—Ä–æ–º–∞—Ç—ã —Å–ø–µ—Ü–∏–π, –∫—Ä–∏–∫–∏ –∑–∞–∑—ã–≤–∞–ª, —Å–∫—Ä—ã—Ç—ã–µ —Ä–∏–∞–¥—ã ‚Äî –∏ —É—Ä–æ–∫–∏ —Ç–∞–∫—Å–∏—Å—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–∞—Ä–∏–ª–∞ –º–Ω–µ —ç—Ç–∞ —Å—Ç—Ä–∞–Ω–∞. –í–Ω—É—Ç—Ä–∏ —Å—Ç–∞—Ç—å–∏ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –ü–û–î–ê–†–û–ö! [‚Ä¶]";

const String phuketTitle = "–ü–•–£–ö–ï–¢ - –ù–ï –¢–û–õ–¨–ö–û –ü–õ–Ø–ñ–ò";
const String phuketDescription =
    "–î–∞, –ø–ª—è–∂–∏ –ü—Ö—É–∫–µ—Ç–∞ –≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω—ã. –ù–æ —ç—Ç–∞ —Å—Ç–∞—Ç—å—è ‚Äî –æ —Ç–æ–º, –∫–∞–∫ —Å–æ–π—Ç–∏ —Å –ø—Ä–æ—Ç–æ–ø—Ç–∞–Ω–Ω–æ–π —Ç—Ä–æ–ø—ã. –ê—Ä–µ–Ω–¥–∞ –±–∞–π–∫–∞, –ø–æ–∏—Å–∫ –Ω–µ—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –≤–æ–¥–æ–ø–∞–¥–æ–≤, —É–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ –±—É—Ö—Ç—ã –∏ –º–∞–Ω–≥—Ä–æ–≤—ã–µ –∑–∞—Ä–æ—Å–ª–∏ ‚Äî –º–æ–π –≥–∏–¥ –ø–æ –¥—Ä—É–≥–æ–º—É –ü—Ö—É–∫–µ—Ç—É [‚Ä¶]";

const String vietnamTitle = "–í–¨–ï–¢–ù–ê–ú: –ë–∏—Ä—é–∑–æ–≤—ã–µ –±–µ—Ä–µ–≥–∞ –î–∞–Ω–∞–Ω–≥–∞";
const String vietnamDescription =
    "–°–æ–ª–Ω–µ—á–Ω—ã–µ –ø–ª—è–∂–∏, –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç—ã –∏ –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –ø—Ä–∏–º–æ—Ä—Å–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ ‚Äî –∫–∞–∫ –ø—Ä–æ–≤–µ—Å—Ç–∏ –∏–¥–µ–∞–ª—å–Ω—ã–π –¥–µ–Ω—å –≤–æ –í—å–µ—Ç–Ω–∞–º–µ [‚Ä¶]";

const String georgiaMountains1Title = "–ì–†–£–ó–ò–Ø: –ò–∑ –ë–∞—Ç—É–º–∏ –≤ –ö—É—Ç–∞–∏—Å–∏ —á–µ—Ä–µ–∑ –≥–æ—Ä—ã";
const String georgiaMountains1Description =
    "–ü–µ—Ä–≤–æ–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –ì—Ä—É–∑–∏–µ–π: –∞–ø–æ–∫–∞–ª–∏–ø—Ç–∏—á–µ—Å–∫–∞—è –ø–æ—Å–∞–¥–∫–∞ –≤ –ë–∞—Ç—É–º–∏, –æ–≥–Ω–µ–Ω–Ω–∞—è —à–∞—É—Ä–º–∞ –∏ —Ö–æ—Ä—Ä–æ—Ä-–∫–≤–µ—Å—Ç –ø–æ –Ω–æ—á–Ω—ã–º –¥–æ—Ä–æ–≥–∞–º –≤ –¥–µ—Ä–µ–≤–Ω—é –Ω–∞–¥ –æ–±–ª–∞–∫–∞–º–∏ [‚Ä¶]";

const String georgiaMountains2Title = "–ì–†–£–ó–ò–Ø: –û—Ç –¢–±–∏–ª–∏—Å–∏ –∫ –≥—Ä–∞–Ω–∏—Ü–µ —Å –†–æ—Å—Å–∏–µ–π";
const String georgiaMountains2Description =
    "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –í–æ–µ–Ω–Ω–æ-–ì—Ä—É–∑–∏–Ω—Å–∫–æ–π –¥–æ—Ä–æ–≥–µ: –¥—Ä–µ–≤–Ω–∏–µ –∫—Ä–µ–ø–æ—Å—Ç–∏, –≥–æ—Ä–Ω—ã–µ –ø–µ—Ä–µ–≤–∞–ª—ã –∏ –≤–∏–¥—ã –Ω–∞ –ö–∞–≤–∫–∞–∑—Å–∫–∏–π —Ö—Ä–µ–±–µ—Ç [‚Ä¶]";

const String malaysiaTitle = "–ú–ê–õ–ê–ô–ó–ò–Ø: –ù–µ–±–æ—Å–∫—Ä–µ–±—ã –∏ –¥–∂—É–Ω–≥–ª–∏ –ö—É–∞–ª–∞-–õ—É–º–ø—É—Ä–∞";
const String malaysiaDescription =
    "–ö–æ–Ω—Ç—Ä–∞—Å—Ç—ã —Å—Ç–æ–ª–∏—Ü—ã –ú–∞–ª–∞–π–∑–∏–∏: –æ—Ç –±–∞—à–µ–Ω-–±–ª–∏–∑–Ω–µ—Ü–æ–≤ –ü–µ—Ç—Ä–æ–Ω–∞—Å –¥–æ —Å–∫—Ä—ã—Ç—ã—Ö –≤ –∑–µ–ª–µ–Ω–∏ —Ö—Ä–∞–º–æ–≤ –∏ —É–ª–∏—á–Ω–æ–π –µ–¥—ã, –∫–æ—Ç–æ—Ä–∞—è –≤—Å–∫—Ä—É–∂–∏—Ç –≤–∞–º –≥–æ–ª–æ–≤—É [‚Ä¶]";

const String dubaiTitle = "–î–£–ë–ê–ô: –†–æ—Å–∫–æ—à—å –∏ –ø—É—Å—Ç—ã–Ω—è –æ—Ç –ê–±—É-–î–∞–±–∏";
const String dubaiDescription =
    "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∏–∑ —Å—Ç–æ–ª–∏—Ü—ã –≤ –≥–æ—Ä–æ–¥ –±—É–¥—É—â–µ–≥–æ. –ù–µ–±–æ—Å–∫—Ä–µ–±—ã, –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ—Å—Ç—Ä–æ–≤–∞ –∏ –≤–µ–ª–∏—á–∏–µ –ø—É—Å—Ç—ã–Ω–∏ ‚Äî –∫–∞–∫ —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –≥—Ä–∞–Ω–∏ –û–ê–≠ [‚Ä¶]";

const String turkeyTitle = "–¢–£–†–¶–ò–Ø: –î—É—à–∞ –¥–≤—É—Ö –∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç–æ–≤ –≤ –°—Ç–∞–º–±—É–ª–µ";
const String turkeyDescription =
    "–ü—Ä–æ–≥—É–ª–∫–∏ –ø–æ –ì—Ä–∞–Ω–¥-–±–∞–∑–∞—Ä—É, –∞—Ä–æ–º–∞—Ç—ã –∫–∞–ª—å—è–Ω–∞, –≤–µ–ª–∏—á–∏–µ –ê–π—è-–°–æ—Ñ–∏–∏ –∏ –∫–æ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∞–≤—è—Ç —ç—Ç–∏–º –≥–æ—Ä–æ–¥–æ–º. –ú–æ–π –ø—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—å –ø–æ —Å–µ—Ä–¥—Ü—É –¢—É—Ä—Ü–∏–∏ [‚Ä¶]";

class ListPage extends StatefulWidget {
  static const String name = 'list';

  const ListPage({super.key});

  @override
  State<ListPage> createState() => _ListPageState();
}

class _ListPageState extends State<ListPage> {
  final ScrollController _scrollController = ScrollController();

  final List<String> _pageImages = [
    "assets/images/me_sachara_desert.webp",
    "assets/images/georgia_mountains.webp", // <-- –ö–∞—Ä—Ç–∏–Ω–∫–∞ –¥–ª—è –ì—Ä—É–∑–∏–∏ (–æ—Å—Ç–∞–µ—Ç—Å—è)
    "assets/images/kuala_lumpur.jpg",
    "assets/images/abu_dhabi.jpg",
    "assets/images/me_istambul.jpg",
    "assets/images/vietnam_beach.webp",
    "assets/images/me_similan_island_colored.webp",
    "assets/images/me_georgia_mountains 2.webp",
  ];

  @override
  void didChangeDependencies() {
    super.didChangeDependencies();
    for (final imagePath in _pageImages) {
      precacheImage(AssetImage(imagePath), context);
    }
  }

  @override
  void dispose() {
    _scrollController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    final isMobile = MediaQuery.of(context).size.width < 800;

    return Scaffold(
        drawer: isMobile ? buildAppDrawer(context) : null,
        backgroundColor: const Color.fromARGB(255, 255, 255, 255),
        appBar: PreferredSize(
          preferredSize: Size.fromHeight(isMobile ? 65 : 110),
          child: const MinimalMenuBar(),
        ),
        body: CustomScrollView(
          controller: _scrollController,
          slivers: [
            SliverToBoxAdapter(
              child: Container(
                height: MediaQuery.of(context).size.height * 0.8,
                padding: const EdgeInsets.symmetric(horizontal: 24),
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Text(
                      "–ü—Ä–∏–≤–µ—Ç, —è –î–∞–Ω–∏–∏–ª!",
                      style: headlineTextStyle.copyWith(fontSize: 26),
                      textAlign: TextAlign.center,
                    ),
                    const SizedBox(height: 16),
                    Text(
                      "–≠—Ç–æ –º–æ–π –±–ª–æ–≥ –æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö, —Ä–∞–±–æ—Ç–µ –∏ –∂–∏–∑–Ω–∏ –≤ —Ä–∞–∑–Ω—ã—Ö —Ç–æ—á–∫–∞—Ö –º–∏—Ä–∞. –¢—É—Ç —è –¥–µ–ª—é—Å—å —Å–≤–æ–∏–º–∏ –∏—Å—Ç–æ—Ä–∏—è–º–∏, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –∏ –ø–æ–ª–µ–∑–Ω—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–∞—é—Ç –º–Ω–µ –≤ —Ä–∞–±–æ—Ç–µ.\n\n "
                      "–ù–∏–∂–µ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—ã –∏–∑ –ø–æ–µ–∑–¥–æ–∫.",
                      style: subtitleTextStyle.copyWith(fontSize: 16),
                      textAlign: TextAlign.center,
                    ),
                    const SizedBox(height: 32),
                    IconButton(
                      icon: const Icon(Icons.arrow_downward, size: 36),
                      onPressed: () {
                        _scrollController.animateTo(
                          MediaQuery.of(context).size.height * 0.8,
                          duration: const Duration(milliseconds: 500),
                          curve: Curves.easeInOut,
                        );
                      },
                    ),
                  ],
                ),
              ),
            ),
            SliverList.list(
              children: [
                // –ú–∞—Ä–æ–∫–∫–æ
                ListItem(
                  imageUrl: "assets/images/me_sachara_desert.webp",
                  title: moroccoTitle,
                  onReadMore: () =>
                      Navigator.pushNamed(context, '/${PostPage.name}'),
                  description: RichText(
                    text: TextSpan(
                      style: bodyTextStyle,
                      children: <TextSpan>[
                        const TextSpan(
                          text:
                              "–ò—Å—Ç–æ—Ä–∏—è –æ —Ç–æ–º, –∫–∞–∫ —è –ø–æ—Ç–µ—Ä—è–ª—Å—è –≤ –ª–∞–±–∏—Ä–∏–Ω—Ç–µ —É–ª–∏—Ü –ú–∞—Ä–æ–∫–∫–æ. –ê—Ä–æ–º–∞—Ç—ã —Å–ø–µ—Ü–∏–π, –∫—Ä–∏–∫–∏ –∑–∞–∑—ã–≤–∞–ª, —Å–∫—Ä—ã—Ç—ã–µ —Ä–∏–∞–¥—ã ‚Äî –∏ —É—Ä–æ–∫–∏ —Ç–∞–∫—Å–∏—Å—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–∞—Ä–∏–ª–∞ –º–Ω–µ —ç—Ç–∞ —Å—Ç—Ä–∞–Ω–∞. ",
                        ),
                        TextSpan(
                          text: '–í–Ω—É—Ç—Ä–∏ —Å—Ç–∞—Ç—å–∏ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –ü–û–î–ê–†–û–ö! üéÅ',
                          style: TextStyle(
                            fontWeight: FontWeight.bold,
                            color: Colors.deepOrangeAccent.shade400,
                          ),
                        ),
                        const TextSpan(text: ' [‚Ä¶]'),
                      ],
                    ),
                  ),
                ),
                divider,

                // <<< 2. –ü–û–°–¢ –ü–†–û –ì–†–£–ó–ò–Æ (–ß–ê–°–¢–¨ 1) –ü–ï–†–ï–ú–ï–©–ï–ù –°–Æ–î–ê >>>
                ListItem(
                  imageUrl: "assets/images/georgia_mountains.webp",
                  title: georgiaMountains1Title,
                  description:
                      Text(georgiaMountains1Description, style: bodyTextStyle),
                  // <<< 3. –°–°–´–õ–ö–ê –í–ï–î–ï–¢ –ù–ê –ù–û–í–£–Æ –°–¢–†–ê–ù–ò–¶–£ >>>
                  onReadMore: () => Navigator.pushNamed(
                    context,
                    '/${PostGeorgiaPage.name}',
                  ),
                ),
                divider,

                // –ú–∞–ª–∞–π–∑–∏—è
                ListItem(
                  imageUrl: "assets/images/kuala_lumpur.jpg",
                  title: malaysiaTitle,
                  description: Text(malaysiaDescription, style: bodyTextStyle),
                  onReadMore: () => Navigator.pushNamed(
                    context,
                    '/${PageUnderConstruction.name}',
                    arguments: {'title': malaysiaTitle},
                  ),
                ),
                divider,

                // –î—É–±–∞–π
                ListItem(
                  imageUrl: "assets/images/abu_dhabi.jpg",
                  title: dubaiTitle,
                  description: Text(dubaiDescription, style: bodyTextStyle),
                  onReadMore: () => Navigator.pushNamed(
                    context,
                    '/${PageUnderConstruction.name}',
                    arguments: {'title': dubaiTitle},
                  ),
                ),
                divider,

                // –¢—É—Ä—Ü–∏—è
                ListItem(
                  imageUrl: "assets/images/me_istambul.jpg",
                  title: turkeyTitle,
                  description: Text(turkeyDescription, style: bodyTextStyle),
                  onReadMore: () => Navigator.pushNamed(
                    context,
                    '/${PageUnderConstruction.name}',
                    arguments: {'title': turkeyTitle},
                  ),
                ),
                divider,

                // –í—å–µ—Ç–Ω–∞–º
                ListItem(
                  imageUrl: "assets/images/vietnam_beach.webp",
                  title: vietnamTitle,
                  description: Text(vietnamDescription, style: bodyTextStyle),
                  onReadMore: () => Navigator.pushNamed(
                    context,
                    '/${PageUnderConstruction.name}',
                    arguments: {'title': vietnamTitle},
                  ),
                ),
                divider,

                // –ü—Ö—É–∫–µ—Ç
                ListItem(
                  imageUrl: "assets/images/me_similan_island_colored.webp",
                  title: phuketTitle,
                  description: Text(phuketDescription, style: bodyTextStyle),
                  onReadMore: () => Navigator.pushNamed(
                    context,
                    '/${PageUnderConstruction.name}',
                    arguments: {'title': phuketTitle},
                  ),
                ),
                divider,

                // –ì—Ä—É–∑–∏—è 2 (–∑–∞–≥–ª—É—à–∫–∞)
                ListItem(
                  imageUrl: "assets/images/me_georgia_mountains 2.webp",
                  title: georgiaMountains2Title,
                  description:
                      Text(georgiaMountains2Description, style: bodyTextStyle),
                  onReadMore: () => Navigator.pushNamed(
                    context,
                    '/${PageUnderConstruction.name}',
                    arguments: {'title': georgiaMountains2Title},
                  ),
                ),
                divider,

                const SizedBox(height: 80),
              ].toMaxWidth(),
            ),
            SliverFillRemaining(
              hasScrollBody: false,
              child: MaxWidthBox(
                  maxWidth: 1200,
                  backgroundColor: Colors.white,
                  child: Container()),
            ),
            ...[
              divider,
              const Footer(),
            ].toMaxWidthSliver(),
          ],
        ));
  }
}